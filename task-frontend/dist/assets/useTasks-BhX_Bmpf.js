import{D as x,i,z as g,x as f}from"./index-BdEAMFYz.js";function z(){const{get:p,post:m,put:y,delete:P}=x(),s=i([]),v=i(!1),n=i(0),r=i(1),l=i(10),d=g(()=>Math.ceil(n.value/l.value)),h=g(()=>r.value<d.value),T=g(()=>r.value>1),c=async(a={})=>{v.value=!0;try{const e=new URLSearchParams;a.page&&e.append("page",a.page.toString()),a.limit&&e.append("limit",a.limit.toString()),a.status&&e.append("status",a.status),a.search&&e.append("search",a.search);const t=e.toString(),k=`/tasks${t?`?${t}`:""}`,o=await p(k);if(o.ok){const u=o.data;s.value=u.tasks||[],n.value=u.total||0,r.value=u.page||1,l.value=u.limit||10}}catch(e){console.error("Fetch tasks error:",e),s.value=[]}finally{v.value=!1}};return{tasks:s,loading:v,total:n,currentPage:r,limit:l,totalPages:d,hasNextPage:h,hasPrevPage:T,fetchTasks:c,getTask:async a=>{try{const e=await p(`/tasks/${a}`);return e.ok?e.data:null}catch(e){return console.error("Get task error:",e),null}},createTask:async a=>{try{const e=await m("/tasks",a);return e.ok?(f.success("Task berhasil dibuat!"),await c({page:r.value,limit:l.value}),e.data):null}catch(e){return console.error("Create task error:",e),null}},updateTask:async(a,e)=>{try{const t=await y(`/tasks/${a}`,e);if(t.ok){f.success("Task berhasil diupdate!");const k=t.data,o=s.value.findIndex(u=>u.id===a);return o!==-1&&(s.value[o]=k),k}return null}catch(t){return console.error("Update task error:",t),null}},deleteTask:async a=>{try{return(await P(`/tasks/${a}`)).ok?(f.success("Task berhasil dihapus!"),s.value=s.value.filter(t=>t.id!==a),n.value=Math.max(0,n.value-1),!0):!1}catch(e){return console.error("Delete task error:",e),!1}},nextPage:()=>{h.value&&c({page:r.value+1,limit:l.value})},prevPage:()=>{T.value&&c({page:r.value-1,limit:l.value})},goToPage:a=>{a>=1&&a<=d.value&&c({page:a,limit:l.value})}}}export{z as u};
